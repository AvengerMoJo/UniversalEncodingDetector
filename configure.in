dnl Process this file with autoconf to produce a configure script.

AC_INIT([Universal Encoding Detector], [0.1.0], [allau@novell.com])
AC_PREREQ(2.52)
AC_REVISION([Revision 0.1])
AC_CONFIG_AUX_DIR([build])

# Universal Encoding Detector Version control for include/universal_encoding_detector_version.h
UED_MAJOR_VERSION=0
UED_MINOR_VERSION=1
UED_MICRO_VERSION=0
UED_INTERFACE_AGE=0
UED_BINARY_AGE=0
UED_VERSION=$UED_MAJOR_VERSION.$UED_MINOR_VERSION.$UED_MICRO_VERSION

AC_SUBST(UED_MAJOR_VERSION)
AC_SUBST(UED_MINOR_VERSION)
AC_SUBST(UED_MICRO_VERSION)
AC_SUBST(UED_INTERFACE_AGE)
AC_SUBST(UED_BINARY_AGE)
AC_SUBST(UED_VERSION)

# Future user of modules and plugins version control 
BINARY_VERSION=$UED_MAJOR_VERSION.$UED_MINOR_VERSION

# Define VERSION
VERSION=$UED_VERSION
PACKAGE="UniversalEncodingDetector"
ADDRESS="allau@novell.com"
AC_DEFINE_UNQUOTED(UED_VERSION,"$UED_VERSION",[The Universal Encoding Dectctor version])

# libtool versioning
LT_RELEASE=$UED_MAJOR_VERSION.$UED_MINOR_VERSION
LT_CURRENT=`expr $UED_MICRO_VERSION - $UED_INTERFACE_AGE`
LT_REVISION=$UED_INTERFACE_AGE
LT_AGE=`expr $UED_BINARY_AGE - $UED_INTERFACE_AGE`

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)


AM_INIT_AUTOMAKE($PACKAGE, $VERSION, $ADDRESS)

AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

AC_DISABLE_STATIC

need_libdl=yes

case x"$target" in
  xNONE | x)
    target_or_host="$host" ;;
  *)
    target_or_host="$target" ;;
esac

case "$target_or_host" in
  *-cygwin)
dnl    AC_ENABLE_STATIC
dnl    AC_DISABLE_SHARED
    ;;
esac

AC_PROG_CC
AM_PROG_LIBTOOL
AM_CTAGSFLAGS="-f tags"

AC_CHECK_HEADER(stdbool.h, BUILD_UED_STDBOOL=1, BUILD_UED_STDBOOL=0)
AC_SUBST(BUILD_UED_STDBOOL)

AC_ARG_WITH(tests,
  [  --with-tests            build test programs[[default=no]]],
  with_tests="$withval", with_tests=yes)
if test "$with_tests" = "yes"; then
    with_tests=yes
    CONF_BUILD_TESTS=1
fi
AC_SUBST(CONF_BUILD_TESTS)

AC_ARG_ENABLE(debug,
  [  --enable-debug          enable debugging [[default=no]]],enable_debug="$withval", enable_debug=no)
if test "$enable_debug" = "yes"; then
    enable_debug=yes
    CONF_BUILD_UED_DEBUG=1
    CFLAGS="$CFLAGS -g3 -fno-inline"
else
    CONF_BUILD_UED_DEBUG=0
fi
AC_SUBST(CONF_BUILD_UED_DEBUG)

AM_CONDITIONAL(BUILD_SHARED, test "$enable_shared" = "yes")
AM_CONDITIONAL(BUILD_STATIC, test "$enable_static" = "yes")
AM_CONDITIONAL(BUILD_UED_DEBUG, test "$enable_debug" = "yes")
AM_CONDITIONAL(BUILD_TESTS, test "$with_tests" = "yes")

MODULEDIRNAME=ued-$BINARY_VERSION
MODULEDIR=$libdir/$MODULEDIRNAME
DATADIR=$datadir/ued-$VERSION
INCLUDEDIR=$includedir/ued
SOPATH=$libdir/libued-$LT_RELEASE.so.$LT_CURRENT




dnl Dynamic Linker
DYNLIB=""
if test "$need_libdl" = "yes"; then
  if test "$enable_shared" = "yes"; then
    AC_CHECK_LIB(dl, dlopen, ,
      AC_MSG_ERROR([
*** UED requires libdl.]))
    DYNLIB="-ldl"
  fi
fi

AC_SUBST(DYNLIB)
AC_SUBST(MODULEDIR)
AC_SUBST(MODULEDIRNAME)
AC_SUBST(DATADIR)
AC_SUBST(INCLUDEDIR)
AC_SUBST(SOPATH)



AC_CONFIG_FILES([
spec/universal_encoding_detector.pc
Makefile
include/universal_encoding_detector_version.h
include/Makefile
lib/build.h
lib/Makefile
src/Makefile
test/Makefile
detectors/Makefile
detectors/unicode/Makefile
detectors/ascii/Makefile
detectors/multibyte/Makefile
])

AC_OUTPUT

